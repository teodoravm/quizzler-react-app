{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEODORA\\\\clone-quiz\\\\quizzler-react-app\\\\src\\\\Question.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { decode } from 'html-entities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n  function clickAnswer(answer, currentQuestion) {\n    props.selectAnswer(answer, currentQuestion);\n  }\n  React.useEffect(() => {\n    props.setIsLoading(false);\n  }, [props.isLoading]);\n  const answerElements = props.allAnswers.map(answer => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => clickAnswer(answer, props.question),\n      className: `unselected \n                ${!props.finished && answer === props.selectedAnswer ? \"selected\" : \"\"}\n                ${props.finished && answer === props.selectedAnswer && answer != props.correctAnswer ? \"incorrect\" : \"\"}\n                ${props.finished && answer === props.correctAnswer ? \"correct\" : \"\"}\n                `,\n      children: decode(answer)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"question\",\n      children: decode(props.question)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: answerElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Question, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","decode","Question","props","clickAnswer","answer","currentQuestion","selectAnswer","useEffect","setIsLoading","isLoading","answerElements","allAnswers","map","question","finished","selectedAnswer","correctAnswer"],"sources":["C:/Users/TEODORA/clone-quiz/quizzler-react-app/src/Question.js"],"sourcesContent":["import React from 'react';\r\nimport {decode} from 'html-entities';\r\n\r\nexport default function Question(props) {\r\n\r\n    function clickAnswer(answer, currentQuestion) {\r\n        props.selectAnswer(answer, currentQuestion)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        props.setIsLoading(false)\r\n    }, [props.isLoading])\r\n   \r\n    const answerElements = props.allAnswers.map(answer => {\r\n        \r\n        return (\r\n            <div onClick={() => clickAnswer(answer, props.question)}\r\n                className={`unselected \r\n                ${!props.finished && answer === props.selectedAnswer ? \"selected\" : \"\"}\r\n                ${props.finished && answer===props.selectedAnswer &&\r\n                    answer != props.correctAnswer ? \"incorrect\" : \"\"}\r\n                ${props.finished && answer===props.correctAnswer ? \"correct\" : \"\"}\r\n                `}>{decode(answer)}\r\n            </div>\r\n                )\r\n    })\r\n\r\n    \r\n\r\n    return (\r\n        <div className='question-box'>\r\n            <h3 className='question'>{decode(props.question)}</h3>\r\n            <div className='answers' >\r\n                {answerElements}\r\n            </div>\r\n            <hr className='line'></hr>\r\n        </div>\r\n        \r\n    )\r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,eAAe;AAAC;AAErC,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EAEpC,SAASC,WAAW,CAACC,MAAM,EAAEC,eAAe,EAAE;IAC1CH,KAAK,CAACI,YAAY,CAACF,MAAM,EAAEC,eAAe,CAAC;EAC/C;EAEAN,KAAK,CAACQ,SAAS,CAAC,MAAM;IAClBL,KAAK,CAACM,YAAY,CAAC,KAAK,CAAC;EAC7B,CAAC,EAAE,CAACN,KAAK,CAACO,SAAS,CAAC,CAAC;EAErB,MAAMC,cAAc,GAAGR,KAAK,CAACS,UAAU,CAACC,GAAG,CAACR,MAAM,IAAI;IAElD,oBACI;MAAK,OAAO,EAAE,MAAMD,WAAW,CAACC,MAAM,EAAEF,KAAK,CAACW,QAAQ,CAAE;MACpD,SAAS,EAAG;AAC5B,kBAAkB,CAACX,KAAK,CAACY,QAAQ,IAAIV,MAAM,KAAKF,KAAK,CAACa,cAAc,GAAG,UAAU,GAAG,EAAG;AACvF,kBAAkBb,KAAK,CAACY,QAAQ,IAAIV,MAAM,KAAGF,KAAK,CAACa,cAAc,IAC7CX,MAAM,IAAIF,KAAK,CAACc,aAAa,GAAG,WAAW,GAAG,EAAG;AACrE,kBAAkBd,KAAK,CAACY,QAAQ,IAAIV,MAAM,KAAGF,KAAK,CAACc,aAAa,GAAG,SAAS,GAAG,EAAG;AAClF,iBAAkB;MAAA,UAAEhB,MAAM,CAACI,MAAM;IAAC;MAAA;MAAA;MAAA;IAAA,QAChB;EAEd,CAAC,CAAC;EAIF,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB;MAAI,SAAS,EAAC,UAAU;MAAA,UAAEJ,MAAM,CAACE,KAAK,CAACW,QAAQ;IAAC;MAAA;MAAA;MAAA;IAAA,QAAM,eACtD;MAAK,SAAS,EAAC,SAAS;MAAA,UACnBH;IAAc;MAAA;MAAA;MAAA;IAAA,QACb,eACN;MAAI,SAAS,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAId;AAAC,GArCuBT,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}